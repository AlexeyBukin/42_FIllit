/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_strsplit_test.c                                 :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: kcharla <kcharla@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/09/13 21:33:50 by kcharla           #+#    #+#             */
/*   Updated: 2019/09/13 21:33:50 by kcharla          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "test.h"

static void		ft_free_arr(char ***arr);

int		main(int argc, char **argv)
{
	char 			c;
	int 			i;
	char			*test1;
	char			**test2;

	//test1 = "abc_def_ghi_j";
	test1 = "lorem ipsum dolor sit amet, \
consectetur adipiscing elit. Sed non risus. \
Suspendisse lectus tortor, dignissim sit amet, \
adipiscing nec, ultricies sed, dolor. Cras elementum, \
ultricies diam. Maecenas ligula massa, varius a, \
semper congue, euismod non, mi.";
	c = 'z';
	//c = '_';
	if (argc > 1)
	{
		test1 = argv[1];
		if (argc > 2)
		{
			c = argv[2][0];
		}
	}
	printf("\nft_split(\"%s\"):\n", test1);
	test1 = ft_strdup(test1);
	test2 = ft_strsplit(test1, c);
	//test2 = (char**)malloc(sizeof(char*) * 2);
	if (test2 == 0)
	{
		printf("ft_strsplit() returned 0 (null pointer). Exit...");
		return (0);
	}
	//test2[0] = test1;
	//test2[1] = 0;

	i = 0;
	while (test2[i] != 0)
	{
		printf(" %d) \"%s\"\n", i, test2[i]);
		i++;
	}
	free(test1);
	//free(test2);
	ft_free_arr(&test2);
	printf("\n");
	return (0);
}

static void		ft_free_arr(char ***input)
{
	char **arr;
	size_t		i;

	i = 0;
	if (input == 0)
		return ;
	arr = *input;
	if(arr == 0)
		return ;
	while (arr[i] != 0)
	{
		printf(" free() : %zu, [0x%08x] : %u\n", i, (unsigned int) arr[i], arr[i][0]);
		free(arr[i]);
		arr[i] = 0;
		i++;
	}
	free(arr);
	arr = 0;
}